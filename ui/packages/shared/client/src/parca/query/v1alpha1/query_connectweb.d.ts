// @generated by protoc-gen-connect-web v0.2.0 with parameter "target=js+dts"
// @generated from file parca/query/v1alpha1/query.proto (package parca.query.v1alpha1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import {LabelsRequest, LabelsResponse, ProfileTypesRequest, ProfileTypesResponse, QueryRangeRequest, QueryRangeResponse, QueryRequest, QueryResponse, SeriesRequest, SeriesResponse, ShareProfileRequest, ShareProfileResponse, ValuesRequest, ValuesResponse} from "./query_pb";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * QueryService is the service that provides APIs to retrieve and inspect profiles
 *
 * @generated from service parca.query.v1alpha1.QueryService
 */
export declare const QueryService: {
  readonly typeName: "parca.query.v1alpha1.QueryService",
  readonly methods: {
    /**
     * QueryRange performs a profile query over a time range
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.QueryRange
     */
    readonly queryRange: {
      readonly name: "QueryRange",
      readonly I: typeof QueryRangeRequest,
      readonly O: typeof QueryRangeResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Query performs a profile query
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.Query
     */
    readonly query: {
      readonly name: "Query",
      readonly I: typeof QueryRequest,
      readonly O: typeof QueryResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Series is unimplemented
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.Series
     */
    readonly series: {
      readonly name: "Series",
      readonly I: typeof SeriesRequest,
      readonly O: typeof SeriesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ProfileTypes returns the list of available profile types.
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.ProfileTypes
     */
    readonly profileTypes: {
      readonly name: "ProfileTypes",
      readonly I: typeof ProfileTypesRequest,
      readonly O: typeof ProfileTypesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Labels returns the set of label names against a given matching string and time frame
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.Labels
     */
    readonly labels: {
      readonly name: "Labels",
      readonly I: typeof LabelsRequest,
      readonly O: typeof LabelsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Values returns the set of values that match a given label and time frame
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.Values
     */
    readonly values: {
      readonly name: "Values",
      readonly I: typeof ValuesRequest,
      readonly O: typeof ValuesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * ShareProfile uploads the given profile to pprof.me and returns a link to the profile.
     *
     * @generated from rpc parca.query.v1alpha1.QueryService.ShareProfile
     */
    readonly shareProfile: {
      readonly name: "ShareProfile",
      readonly I: typeof ShareProfileRequest,
      readonly O: typeof ShareProfileResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

